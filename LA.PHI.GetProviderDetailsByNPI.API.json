{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "Access_Token": {
                "inputs": {
                    "variables": [
                        {
                            "name": "AccessToken",
                            "type": "string",
                            "value": "Dummy"
                        }
                    ]
                },
                "runAfter": {
                    "Read_Endpoint": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Check_Validity_Of_Input": {
                "actions": {},
                "else": {
                    "actions": {
                        "Send_Bad_Format_Error_Response": {
                            "inputs": {
                                "body": "@json(concat('{\"Header\":{ \"Endpoint\" : \"',triggerBody()?['EndpointIdentifier'],'\", \"Status\" : \"Error\", \"StatusCode\" : \"400\" },\"Body\":{ \"ErrorDescription\" : \"Bad Format\"}}'))",
                                "statusCode": 200
                            },
                            "kind": "Http",
                            "runAfter": {},
                            "type": "Response"
                        },
                        "Terminate": {
                            "inputs": {
                                "runError": {
                                    "code": "400",
                                    "message": "Bad Format"
                                },
                                "runStatus": "Failed"
                            },
                            "runAfter": {
                                "Send_Bad_Format_Error_Response": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Terminate"
                        }
                    }
                },
                "expression": {
                    "and": [
                        {
                            "equals": [
                                "@json(string(body('LA.PHI.General.CheckEndpointAvailability')))['Header']['Status']",
                                "Success"
                            ]
                        },
                        {
                            "equals": [
                                "@body('ValidateInput')",
                                "Success"
                            ]
                        }
                    ]
                },
                "runAfter": {
                    "LA.PHI.General.CheckEndpointAvailability": [
                        "Succeeded"
                    ]
                },
                "type": "If"
            },
            "Compose_Fields": {
                "inputs": "@replace(concat('{ \"',replace(replace(string(triggerBody()?['Identifier']),'=','\":\"'),'|','\",\"'),'\"}'),' ','')",
                "runAfter": {
                    "Check_Validity_Of_Input": [
                        "Succeeded"
                    ]
                },
                "type": "Compose"
            },
            "GetAccessToken": {
                "inputs": {
                    "body": {
                        "audience": "https://azurehealthcareapis.com",
                        "authority": "https://login.microsoftonline.com/894e47d6-5fd9-4351-b8a4-f3a178380c66",
                        "clientId": "d65826a4-a0d5-44d3-8f88-1e6660715fe9",
                        "clientSecret": "Sx1LRBabgD?GG?[5bv_RcGTboUNcRs74"
                    },
                    "function": {
                        "id": "/subscriptions/69aa0a7e-9493-4851-a6e8-80cca46db8cc/resourceGroups/Azure-FHIR-RG/providers/Microsoft.Web/sites/PanoramicFunctionHelper/functions/GetAccessToken"
                    }
                },
                "runAfter": {
                    "Parse_Identifiers": [
                        "Succeeded"
                    ]
                },
                "type": "Function"
            },
            "Get_Endpoint_Details": {
                "inputs": {
                    "headers": {
                        "Authorization": "Bearer @{body('GetAccessToken')}",
                        "content-type": "application/json"
                    },
                    "method": "GET",
                    "uri": "@concat('https://panoramic-dev.azurehealthcareapis.com/Endpoint/',triggerBody()?['EndpointIdentifier'])"
                },
                "runAfter": {
                    "GetAccessToken": [
                        "Succeeded"
                    ]
                },
                "type": "Http"
            },
            "LA.PHI.General.CheckEndpointAvailability": {
                "inputs": {
                    "body": {
                        "EndpointIdentifier": "@triggerBody()?['EndpointIdentifier']"
                    },
                    "host": {
                        "triggerName": "manual",
                        "workflow": {
                            "id": "/subscriptions/69aa0a7e-9493-4851-a6e8-80cca46db8cc/resourceGroups/LA.PNM.FHIR.RG/providers/Microsoft.Logic/workflows/LA.PHI.General.CheckEndpointAvailability"
                        }
                    }
                },
                "runAfter": {
                    "ValidateInput": [
                        "Succeeded"
                    ]
                },
                "type": "Workflow"
            },
            "Parse_Identifiers": {
                "inputs": {
                    "content": "@outputs('Compose_Fields')",
                    "schema": {
                        "properties": {
                            "NPI": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "runAfter": {
                    "Compose_Fields": [
                        "Succeeded"
                    ]
                },
                "type": "ParseJson"
            },
            "Read_Endpoint": {
                "inputs": {
                    "variables": [
                        {
                            "name": "EndPointAddress",
                            "type": "string",
                            "value": "@toUpper(body('Get_Endpoint_Details')['identifier'][0]['value'])"
                        }
                    ]
                },
                "runAfter": {
                    "Read_NPI": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Read_NPI": {
                "inputs": {
                    "variables": [
                        {
                            "name": "NPI",
                            "type": "string",
                            "value": "@body('Parse_Identifiers')?['NPI']"
                        }
                    ]
                },
                "runAfter": {
                    "Get_Endpoint_Details": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Return_Parsing_Error": {
                "inputs": {
                    "body": "@json(concat('{\"Header\":{ \"Endpoint\" : \"',triggerBody()?['EndpointIdentifier'],'\", \"Status\" : \"Error\", \"StatusCode\" : \"400\" },\"Body\":{ \"ErrorDescription\" : \"Bad Format\"}}'))",
                    "statusCode": 200
                },
                "kind": "Http",
                "runAfter": {
                    "Parse_Identifiers": [
                        "Failed"
                    ]
                },
                "type": "Response"
            },
            "Switch": {
                "cases": {
                    "All_Scripts": {
                        "actions": {
                            "Authenticate_Credentials": {
                                "inputs": {
                                    "body": {
                                        "Action": "GetUserAuthentication",
                                        "AppUserID": "@body('Get_Endpoint_Details')['header'][0]",
                                        "Appname": "PanoramicHealthInnovationsInc.PHITest.TestApp",
                                        "Data": "",
                                        "Parameter1": "@body('Get_Endpoint_Details')['header'][1]",
                                        "Parameter2": "",
                                        "Parameter3": "",
                                        "Parameter4": "",
                                        "Parameter5": "",
                                        "Parameter6": "",
                                        "Token": "@decodeBase64(body('Get_All_Script_Access_Token')['$content'])"
                                    },
                                    "headers": {
                                        "Content-Type": "application/json"
                                    },
                                    "method": "POST",
                                    "uri": "@concat(body('Get_Endpoint_Details')['address'],'MagicJson')"
                                },
                                "runAfter": {
                                    "Get_All_Script_Access_Token": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Http"
                            },
                            "Get_All_Script_Access_Token": {
                                "inputs": {
                                    "body": {
                                        "Password": "P@n8r@M1cH6@Lta#nn5v@Tf!Ns2Ncp",
                                        "Username": "Panor-6855-PHITest-test"
                                    },
                                    "headers": {
                                        "Content-Type": "application/json"
                                    },
                                    "method": "POST",
                                    "uri": "@concat(body('Get_Endpoint_Details')['address'],'GetToken')"
                                },
                                "runAfter": {},
                                "type": "Http"
                            },
                            "Get_All_Scripts_Provider_Details_By_NPI": {
                                "inputs": {
                                    "body": {
                                        "Action": "GetPractitioners",
                                        "AppUserID": "@body('Get_Endpoint_Details')['header'][0]",
                                        "Appname": "PanoramicHealthInnovationsInc.PHITest.TestApp",
                                        "Data": "",
                                        "Parameter1": "@concat('Referring_Provider_NPI=',variables('NPI'))",
                                        "Parameter2": "",
                                        "Parameter3": "",
                                        "Parameter4": "",
                                        "Parameter5": "",
                                        "Parameter6": "",
                                        "Token": "@decodeBase64(body('Get_All_Script_Access_Token')['$content'])"
                                    },
                                    "headers": {
                                        "Content-Type": "application/json"
                                    },
                                    "method": "POST",
                                    "uri": "@concat(body('Get_Endpoint_Details')['address'],'MagicJson')"
                                },
                                "runAfter": {
                                    "Authenticate_Credentials": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Http"
                            },
                            "Return_All_Scripts_Provider_ErrorResponse": {
                                "inputs": {
                                    "body": "@concat('{\"Header\":{ \"Endpoint\" : \"ALLSCRIPTS\", \"Status\" : \"Error\", \"StatusCode\" : \"',outputs('Get_All_Scripts_Provider_Details_By_NPI')['statusCode'],'\" },\"Body\":{ \"Error Description\" : \"',body('Get_All_Scripts_Provider_Details_By_NPI')[0]['Error'],'\"}}')",
                                    "statusCode": 200
                                },
                                "kind": "Http",
                                "runAfter": {
                                    "Get_All_Scripts_Provider_Details_By_NPI": [
                                        "Failed"
                                    ]
                                },
                                "type": "Response"
                            },
                            "Return_All_Scripts_Provider_Response": {
                                "inputs": {
                                    "body": "@concat('{\"Header\":{ \"Endpoint\" : \"ALLSCRIPTS\", \"Status\" : \"Success\", \"StatusCode\" : \"',outputs('Get_All_Scripts_Provider_Details_By_NPI')['statusCode'],'\" },\"Body\":{ \"ProviderExternalID\" : \"',body('Get_All_Scripts_Provider_Details_By_NPI')[0],'\"}}')",
                                    "statusCode": 200
                                },
                                "kind": "Http",
                                "runAfter": {
                                    "Get_All_Scripts_Provider_Details_By_NPI": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Response"
                            }
                        },
                        "case": "ALLSCRIPTS"
                    },
                    "Athena": {
                        "actions": {
                            "Athena_Error_Response": {
                                "inputs": {
                                    "body": "@concat('{\"Header\":{ \"Endpoint\" : \"ATHENA\", \"Status\" : \"Error\", \"StatusCode\" : \"',outputs('Get_Provider_Details')['statusCode'],'\" },\"Body\":{ \"ReasonDescription\" : ',body('Get_Provider_Details'),'}}')",
                                    "statusCode": 200
                                },
                                "kind": "Http",
                                "runAfter": {
                                    "Get_Provider_Details": [
                                        "Failed"
                                    ]
                                },
                                "type": "Response"
                            },
                            "Get_Access_Token": {
                                "inputs": {
                                    "body": "grant_type=client_credentials&client_id=wffujq3bf5hqxbkvcqb2qta3&client_secret=f4GgJBxFF9Rcp4B",
                                    "headers": {
                                        "content-type": "application/x-www-form-urlencoded"
                                    },
                                    "method": "POST",
                                    "uri": "@concat(substring(body('Get_Endpoint_Details')['address'],0,28),'/oauthpreview/token')"
                                },
                                "runAfter": {},
                                "type": "Http"
                            },
                            "Get_Provider_Details": {
                                "inputs": {
                                    "headers": {
                                        "Authorization": "Bearer @{body('Parse_JSON')?['access_token']}"
                                    },
                                    "method": "GET",
                                    "uri": "@concat(substring(body('Get_Endpoint_Details')['address'],0,38),'195900/providers/',variables('NPI'))"
                                },
                                "runAfter": {
                                    "Parse_JSON": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Http"
                            },
                            "Parse_JSON": {
                                "inputs": {
                                    "content": "@body('Get_Access_Token')",
                                    "schema": {
                                        "properties": {
                                            "access_token": {
                                                "type": "string"
                                            },
                                            "expires_in": {
                                                "type": "integer"
                                            },
                                            "refresh_token": {
                                                "type": "string"
                                            },
                                            "token_type": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "runAfter": {
                                    "Get_Access_Token": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "ParseJson"
                            },
                            "Response": {
                                "inputs": {
                                    "body": "@concat('{\"Header\":{ \"Endpoint\" : \"ATHENA\", \"Status\" : \"Success\", \"StatusCode\" : \"',outputs('Get_Provider_Details')['statusCode'],'\" },\"Body\":{ \"ProviderExternalID\" : \"',body('Get_Provider_Details')[0]['providerid'],'\"}}')",
                                    "statusCode": 200
                                },
                                "kind": "Http",
                                "runAfter": {
                                    "Get_Provider_Details": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Response"
                            }
                        },
                        "case": "ATHENA"
                    },
                    "Cerner": {
                        "actions": {
                            "Get_CERNER_Auth_Token": {
                                "inputs": {
                                    "body": "grant_type=client_credentials&scope=system%2FPractitioner.read%20system%2FPatient.read%20system%2FObservation.read",
                                    "headers": {
                                        "Accept": "application/json",
                                        "Authorization": "@concat('Basic ', body('Get_Endpoint_Details')['header'][1])",
                                        "Content-Type": "application/x-www-form-urlencoded"
                                    },
                                    "method": "POST",
                                    "uri": "@concat('https://authorization.sandboxcerner.com/tenants/',body('Get_Endpoint_Details')['header'][0],'/protocols/oauth2/profiles/smart-v1/token')"
                                },
                                "runAfter": {},
                                "type": "Http"
                            },
                            "Get_Cerner_Provider_Details": {
                                "inputs": {
                                    "headers": {
                                        "Accept": "application/fhir+json",
                                        "Authorization": "Bearer @{body('Get_CERNER_Auth_Token')['access_token']}"
                                    },
                                    "method": "GET",
                                    "uri": "@concat(body('Get_Endpoint_Details')['address'],'Practitioner/',variables('NPI'))"
                                },
                                "runAfter": {
                                    "Get_CERNER_Auth_Token": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Http"
                            },
                            "Return_Cerner_Provider_ErrorResponse": {
                                "inputs": {
                                    "body": "@json(concat('{\"Header\":{ \"Endpoint\" : \"CERNER\", \"Status\" : \"Error\", \"StatusCode\" : \"',outputs('Get_Cerner_Provider_Details')['statusCode'],'\" },\"Body\":{ \"ProviderExternalID\" : \"',body('Get_Cerner_Provider_Details')['issue'][0]['details']['text'],'\"}'))",
                                    "statusCode": 200
                                },
                                "kind": "Http",
                                "runAfter": {
                                    "Get_Cerner_Provider_Details": [
                                        "Failed"
                                    ]
                                },
                                "type": "Response"
                            },
                            "Return_Cerner_Provider_Response": {
                                "inputs": {
                                    "body": "@json(concat('{\"Header\":{ \"Endpoint\" : \"CERNER\", \"Status\" : \"Success\", \"StatusCode\" : \"',outputs('Get_Cerner_Provider_Details')['statusCode'],'\" },\"Body\":{ \"ProviderExternalID\" : \"', body('Get_Cerner_Provider_Details')['id'],'\"}'))",
                                    "statusCode": 200
                                },
                                "kind": "Http",
                                "runAfter": {
                                    "Get_Cerner_Provider_Details": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Response"
                            }
                        },
                        "case": "CERNER"
                    },
                    "DrChrono": {
                        "actions": {
                            "Get_DrChrono_Provider_details": {
                                "inputs": {
                                    "headers": {
                                        "Authorization": "Bearer @{body('LA.PHI.DRCHRONO.RefreshAccessToken')['AccessToken']}"
                                    },
                                    "method": "GET",
                                    "uri": "@concat(body('Get_Endpoint_Details')['address'],'doctors?npi_number=1234567890')"
                                },
                                "runAfter": {
                                    "LA.PHI.DRCHRONO.RefreshAccessToken": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Http"
                            },
                            "LA.PHI.DRCHRONO.RefreshAccessToken": {
                                "inputs": {
                                    "body": {
                                        "RefreshToken": "@body('Get_Endpoint_Details')['header'][1]"
                                    },
                                    "host": {
                                        "triggerName": "manual",
                                        "workflow": {
                                            "id": "/subscriptions/69aa0a7e-9493-4851-a6e8-80cca46db8cc/resourceGroups/LA.PNM.FHIR.RG/providers/Microsoft.Logic/workflows/LA.PHI.DRCHRONO.RefreshAccessToken"
                                        }
                                    }
                                },
                                "runAfter": {},
                                "type": "Workflow"
                            },
                            "Send_DrChrono_Provider_ErrorResponse": {
                                "inputs": {
                                    "body": "@json(concat('{\"Header\":{ \"Endpoint\" : \"DRCHRONO\", \"Status\" : \"Error\", \"StatusCode\" : \"',outputs('Get_DrChrono_Provider_details')['statusCode'],'\" },\"Body\":{ \"ProviderExternalID\" : \"',body('Get_DrChrono_Provider_details'),'\"}'))",
                                    "statusCode": 200
                                },
                                "kind": "Http",
                                "runAfter": {
                                    "Get_DrChrono_Provider_details": [
                                        "Failed"
                                    ]
                                },
                                "type": "Response"
                            },
                            "Send_DrChrono_Provider_Response": {
                                "inputs": {
                                    "body": "@json(concat('{\"Header\":{ \"Endpoint\" : \"DRCHRONO\", \"Status\" : \"Success\", \"StatusCode\" : \"',outputs('Get_DrChrono_Provider_details')['statusCode'],'\" },\"Body\":{ \"ProviderExternalID\" : \"',body('Get_DrChrono_Provider_details')['results'][0]['id'],'\"}'))",
                                    "statusCode": 200
                                },
                                "kind": "Http",
                                "runAfter": {
                                    "Get_DrChrono_Provider_details": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Response"
                            }
                        },
                        "case": "DRCHRONO"
                    },
                    "EPIC": {
                        "actions": {
                            "Get_Practitioner_Details": {
                                "inputs": {
                                    "headers": {
                                        "Authorization": "Basic @{variables('AccessToken')}",
                                        "Content-Type": "application/json",
                                        "Epic-Client-ID": "672c5f7d-4098-46ff-a00f-57c02f330fe9"
                                    },
                                    "method": "GET",
                                    "uri": "@concat(substring(body('Get_Endpoint_Details')['address'],0,63),'FHIR/STU3/Practitioner?identifier=NPI|',variables('NPI'))"
                                },
                                "runAfter": {
                                    "Set_EPI_Access_Token": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Http"
                            },
                            "NPI_Not_found": {
                                "actions": {
                                    "Return_EPIC_Response": {
                                        "inputs": {
                                            "body": "@json(concat('{\"Header\":{ \"Endpoint\" : \"EPIC\", \"Status\" : \"Success\", \"StatusCode\" : \"',outputs('Get_Practitioner_Details')['statusCode'],'\" },\"Body\":{ \"ProviderExternalID\" : \"',xpath(outputs('Get_Practitioner_Details')['body'],'string(//*[local-name()=\"Bundle\"]/*[local-name()=\"entry\"]/*[local-name()=\"resource\"]/*[local-name()=\"Practitioner\"]/*[local-name()=\"identifier\"][*[local-name()=\"type\"]/*[local-name()=\"text\"]/@*[local-name()=\"value\"]=\"EXTERNAL\"]/*[local-name()=\"value\"]/@*[local-name()=\"value\"])'),'\"}}'))",
                                            "statusCode": 200
                                        },
                                        "kind": "Http",
                                        "runAfter": {},
                                        "type": "Response"
                                    }
                                },
                                "else": {
                                    "actions": {
                                        "Return_NPI_Not_Found": {
                                            "inputs": {
                                                "body": "@json(concat('{\"Header\":{ \"Endpoint\" : \"EPIC\", \"Status\" : \"Error\", \"StatusCode\" : \"400\" },\"Body\":{ \"Status\" : \"Failed\",\"ReasonDescription\" : \"NPI NOT FOUND\"}}'))",
                                                "statusCode": 200
                                            },
                                            "kind": "Http",
                                            "runAfter": {},
                                            "type": "Response"
                                        }
                                    }
                                },
                                "expression": {
                                    "and": [
                                        {
                                            "greater": [
                                                "@int(json(body('Get_Practitioner_Details'))['Bundle']['total']['@value'])",
                                                0
                                            ]
                                        }
                                    ]
                                },
                                "runAfter": {
                                    "Get_Practitioner_Details": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "If"
                            },
                            "Return_EPIC_Error_Response": {
                                "inputs": {
                                    "body": "@json(concat('{\"Header\":{ \"Endpoint\" : \"EPIC\", \"Status\" : \"Error\", \"StatusCode\" : \"',outputs('Get_Practitioner_Details')['statusCode'],'\" },\"Body\":{ \"Status\" : \"Failed\",\"ReasonDescription\" : ',if(startsWith(trim(string(body('Get_Practitioner_Details'))),'{'),body('Get_Practitioner_Details'),json(xml(body('Get_Practitioner_Details')))),'}}'))",
                                    "statusCode": 200
                                },
                                "kind": "Http",
                                "runAfter": {
                                    "Get_Practitioner_Details": [
                                        "Failed"
                                    ]
                                },
                                "type": "Response"
                            },
                            "Set_EPI_Access_Token": {
                                "inputs": {
                                    "name": "AccessToken",
                                    "value": "@base64(concat('emp$',substring(body('Get_Endpoint_Details')['header'][0],9),':',substring(body('Get_Endpoint_Details')['header'][1],9)))"
                                },
                                "runAfter": {},
                                "type": "SetVariable"
                            }
                        },
                        "case": "EPIC"
                    },
                    "Next_Gen": {
                        "actions": {
                            "Get_NG_Provider_Details": {
                                "inputs": {
                                    "headers": {
                                        "Authorization": "Bearer @{body('Get_NextGen_Access_Token')['access_token']}"
                                    },
                                    "method": "GET",
                                    "uri": "https://nativeapi.nextgen.com/nga-native-api/providers/@{variables('NPI')}"
                                },
                                "runAfter": {
                                    "Get_NextGen_Access_Token": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Http"
                            },
                            "Get_NextGen_Access_Token": {
                                "inputs": {
                                    "body": "grant_type=password&client_id=l79800f2eab85041a4a1cdc364641df514&client_secret=b67bd784a7264dd6aa1ba1f6bfe3b8c1&email=sandbox_593%40yopmail.com&username=sandboxprod593&password=E55C9c25-23D1-45A6-959F%21",
                                    "headers": {
                                        "Content-Type": "application/x-www-form-urlencoded"
                                    },
                                    "method": "POST",
                                    "uri": "https://nativeapi.nextgen.com/auth/oauth/v2/token"
                                },
                                "runAfter": {},
                                "type": "Http"
                            },
                            "Send_NG_Error_Response": {
                                "inputs": {
                                    "body": "@concat('{\"Header\":{ \"Endpoint\" : \"NextGen\", \"Status\" : \"Failed\", \"StatusCode\" : \"',outputs('Get_NG_Provider_Details')['statusCode'],'\" },\"Body\":{ \"Status\" : \"Failed\",\"ReasonDescription\" : ',if(startsWith(trim(string(body('Get_NG_Provider_Details'))),'{'),body('Get_NG_Provider_Details'),json(xml(body('Get_NG_Provider_Details')))),'}}')",
                                    "statusCode": 200
                                },
                                "kind": "Http",
                                "runAfter": {
                                    "Get_NG_Provider_Details": [
                                        "Failed"
                                    ]
                                },
                                "type": "Response"
                            },
                            "Send_NG_Response": {
                                "inputs": {
                                    "body": "@concat('{\"Header\":{ \"Endpoint\" : \"NextGen\", \"Status\" : \"Success\", \"StatusCode\" : \"',outputs('Get_NG_Provider_Details')['statusCode'],'\" },\"Body\":{ \"ProviderExternalID\" : \"',body('Get_NG_Provider_Details')['nationalProviderId'],'\"}}')",
                                    "statusCode": 200
                                },
                                "kind": "Http",
                                "runAfter": {
                                    "Get_NG_Provider_Details": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Response"
                            }
                        },
                        "case": "NEXTGEN"
                    }
                },
                "default": {
                    "actions": {}
                },
                "expression": "@toupper(variables('EndPointAddress'))",
                "runAfter": {
                    "Access_Token": [
                        "Succeeded"
                    ]
                },
                "type": "Switch"
            },
            "ValidateInput": {
                "inputs": {
                    "body": "@triggerBody()",
                    "function": {
                        "id": "/subscriptions/69aa0a7e-9493-4851-a6e8-80cca46db8cc/resourceGroups/Azure-FHIR-RG/providers/Microsoft.Web/sites/PanoramicFunctionHelper/functions/ValidateInput"
                    }
                },
                "runAfter": {},
                "type": "Function"
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "parameters": {},
        "triggers": {
            "manual": {
                "inputs": {
                    "schema": {
                        "properties": {
                            "EndpointIdentifier": {
                                "type": "string"
                            },
                            "Identifier": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "kind": "Http",
                "type": "Request"
            }
        }
    },
    "parameters": {}
}
