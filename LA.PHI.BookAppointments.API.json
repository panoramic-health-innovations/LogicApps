{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "Access_Token": {
                "inputs": {
                    "variables": [
                        {
                            "name": "AccessToken",
                            "type": "string",
                            "value": "dummy"
                        }
                    ]
                },
                "runAfter": {
                    "Initialize_Endpoint": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Check_Validity_of_Input": {
                "actions": {},
                "else": {
                    "actions": {
                        "Send_Bad_Format_Error": {
                            "inputs": {
                                "body": "@json(concat('{\"Header\":{ \"Endpoint\" : \"',triggerBody()?['EndpointIdentifier'],'\", \"Status\" : \"Error\", \"StatusCode\" : \"400\" },\"Body\":{ \"ErrorDescription\" : \"Bad Format\"}}'))",
                                "statusCode": 200
                            },
                            "kind": "Http",
                            "runAfter": {},
                            "type": "Response"
                        },
                        "Terminate": {
                            "inputs": {
                                "runError": {
                                    "code": "400",
                                    "message": "Bad Format"
                                },
                                "runStatus": "Failed"
                            },
                            "runAfter": {
                                "Send_Bad_Format_Error": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Terminate"
                        }
                    }
                },
                "expression": {
                    "and": [
                        {
                            "equals": [
                                "@json(string(body('LA.PHI.General.CheckEndpointAvailability')))['Header']['Status']",
                                "Success"
                            ]
                        },
                        {
                            "equals": [
                                "@body('ValidateInput')",
                                "Success"
                            ]
                        }
                    ]
                },
                "runAfter": {
                    "LA.PHI.General.CheckEndpointAvailability": [
                        "Succeeded"
                    ]
                },
                "type": "If"
            },
            "Compose_Fields": {
                "inputs": "@replace(concat('{ \"',replace(replace(string(body('Parse_JSON')?['Identifier']),'=','\":\"'),'|','\",\"'),'\"}'),' ','')",
                "runAfter": {
                    "Parse_JSON": [
                        "Succeeded"
                    ]
                },
                "type": "Compose"
            },
            "GetAccessToken": {
                "inputs": {
                    "body": {
                        "audience": "https://azurehealthcareapis.com",
                        "authority": "https://login.microsoftonline.com/894e47d6-5fd9-4351-b8a4-f3a178380c66",
                        "clientId": "d65826a4-a0d5-44d3-8f88-1e6660715fe9",
                        "clientSecret": "Sx1LRBabgD?GG?[5bv_RcGTboUNcRs74"
                    },
                    "function": {
                        "id": "/subscriptions/69aa0a7e-9493-4851-a6e8-80cca46db8cc/resourceGroups/Azure-FHIR-RG/providers/Microsoft.Web/sites/PanoramicFunctionHelper/functions/GetAccessToken"
                    }
                },
                "runAfter": {
                    "Check_Validity_of_Input": [
                        "Succeeded"
                    ]
                },
                "type": "Function"
            },
            "Get_Endpoint_Details": {
                "inputs": {
                    "headers": {
                        "Authorization": "Bearer @{body('GetAccessToken')}",
                        "content-type": "application/json"
                    },
                    "method": "GET",
                    "uri": "@concat('https://panoramic-dev.azurehealthcareapis.com/Endpoint/',triggerBody()?['EndpointIdentifier'])"
                },
                "runAfter": {
                    "GetAccessToken": [
                        "Succeeded"
                    ]
                },
                "type": "Http"
            },
            "Initialize_Endpoint": {
                "inputs": {
                    "variables": [
                        {
                            "name": "Endpoint",
                            "type": "string",
                            "value": "@toUpper(body('Get_Endpoint_Details')['identifier'][0]['value'])"
                        }
                    ]
                },
                "runAfter": {
                    "Get_Endpoint_Details": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "LA.PHI.General.CheckEndpointAvailability": {
                "inputs": {
                    "body": {
                        "EndpointIdentifier": "@triggerBody()?['EndpointIdentifier']"
                    },
                    "host": {
                        "triggerName": "manual",
                        "workflow": {
                            "id": "/subscriptions/69aa0a7e-9493-4851-a6e8-80cca46db8cc/resourceGroups/LA.PNM.FHIR.RG/providers/Microsoft.Logic/workflows/LA.PHI.General.CheckEndpointAvailability"
                        }
                    }
                },
                "runAfter": {
                    "ValidateInput": [
                        "Succeeded"
                    ]
                },
                "type": "Workflow"
            },
            "Parse_Identifier": {
                "inputs": {
                    "content": "@outputs('Compose_Fields')",
                    "schema": {
                        "properties": {
                            "AppointmentDuration": {
                                "type": "string"
                            },
                            "AppointmentID": {
                                "type": "string"
                            },
                            "AppointmentIDType": {
                                "type": "string"
                            },
                            "DepartmentID": {
                                "type": "string"
                            },
                            "PatientExternalID": {
                                "type": "string"
                            },
                            "PatientIDType": {
                                "type": "string"
                            },
                            "ProviderExternalID": {
                                "type": "string"
                            },
                            "ResourceType": {
                                "type": "string"
                            },
                            "SlotDate": {
                                "type": "string"
                            },
                            "SlotTime": {
                                "type": "string"
                            },
                            "VisitType": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "runAfter": {
                    "Compose_Fields": [
                        "Succeeded"
                    ]
                },
                "type": "ParseJson"
            },
            "Parse_JSON": {
                "inputs": {
                    "content": "@triggerBody()",
                    "schema": {
                        "properties": {
                            "Comments": {
                                "type": "string"
                            },
                            "EndpointIdentifier": {
                                "type": "string"
                            },
                            "Identifier": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "runAfter": {
                    "Access_Token": [
                        "Succeeded"
                    ]
                },
                "type": "ParseJson"
            },
            "Return_Parsing_Error": {
                "inputs": {
                    "body": "@json(concat('{\"Header\":{ \"Endpoint\" : \"',triggerBody()?['EndpointIdentifier'],'\", \"Status\" : \"Error\", \"StatusCode\" : \"400\" },\"Body\":{ \"ErrorDescription\" : \"Bad Format\"}}'))",
                    "statusCode": 200
                },
                "kind": "Http",
                "runAfter": {
                    "Parse_Identifier": [
                        "Failed"
                    ]
                },
                "type": "Response"
            },
            "Switch": {
                "cases": {
                    "AllScripts": {
                        "actions": {
                            "AllScripts_Error_Response": {
                                "inputs": {
                                    "body": "@json(concat('{\"Header\":{ \"Endpoint\" : \"AllScripts\", \"Status\" : \"Failure\", \"StatusCode\" : \"',outputs('Book_Appointment_in_AllScripts_PM')['statusCode'],'\" },\"Body\":{ \"Status\" : \"Failed\",\"ReasonDescription\" :',if(startsWith(trim(string(body('Book_Appointment_in_AllScripts_PM'))),'{'),concat('\"',json(body('Book_Appointment_in_AllScripts_PM'))['error'],'\"'),concat('\"',body('Book_Appointment_in_AllScripts_PM'),'\"')),'}}'))",
                                    "statusCode": 200
                                },
                                "kind": "Http",
                                "runAfter": {
                                    "Book_Appointment_in_AllScripts_PM": [
                                        "Failed",
                                        "TimedOut"
                                    ]
                                },
                                "type": "Response"
                            },
                            "Authenticate_Credentials": {
                                "inputs": {
                                    "body": {
                                        "Action": "GetUserAuthentication",
                                        "AppUserID": "@body('Get_Endpoint_Details')['header'][0]",
                                        "Appname": "PanoramicHealthInnovationsInc.PHITest.TestApp",
                                        "Data": "",
                                        "Parameter1": "@body('Get_Endpoint_Details')['header'][1]",
                                        "Parameter2": "",
                                        "Parameter3": "",
                                        "Parameter4": "",
                                        "Parameter5": "",
                                        "Parameter6": "",
                                        "Token": "@decodeBase64(body('Get_AllScripts_Access_Token')['$content'])"
                                    },
                                    "headers": {
                                        "Content-Type": "application/json"
                                    },
                                    "method": "POST",
                                    "uri": "@concat(body('Get_Endpoint_Details')['address'],'MagicJson')"
                                },
                                "runAfter": {
                                    "Get_AllScripts_Access_Token": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Http"
                            },
                            "Book_Appointment_in_AllScripts_PM": {
                                "inputs": {
                                    "body": {
                                        "Action": "SaveAppointment",
                                        "AppUserID": "@body('Get_Endpoint_Details')['header'][0]",
                                        "Appname": "PanoramicHealthInnovationsInc.PHITest.TestApp",
                                        "Data": "",
                                        "Parameter1": "@string(xml(json(concat('{\"appt\":',outputs('Compose'),'}'))))",
                                        "Parameter2": "",
                                        "Parameter3": "",
                                        "Parameter4": "",
                                        "Parameter5": "",
                                        "Parameter6": "",
                                        "PatientID": "@{body('Parse_Identifier')?['PatientExternalID']}",
                                        "Token": "@decodeBase64(body('Get_AllScripts_Access_Token')['$content'])"
                                    },
                                    "headers": {
                                        "Content-Type": "application/json"
                                    },
                                    "method": "POST",
                                    "uri": "@concat(body('Get_Endpoint_Details')['address'],'MagicJson')"
                                },
                                "runAfter": {
                                    "Compose": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Http"
                            },
                            "Compose": {
                                "inputs": {
                                    "appointmentDateTime": "@{body('Parse_Identifier')?['SlotDate']} @{body('Parse_Identifier')?['SlotTime']}",
                                    "appointmentDuration": "15",
                                    "appointmentType": "@{body('Parse_Identifier')?['AppointmentIDType']}",
                                    "comments": "Appointment saved from Unity",
                                    "coverageType": "M",
                                    "referDr": "Bones",
                                    "resource": "ANNANE",
                                    "schedulingDepartment": "OFFICE",
                                    "schedulingLocation": "OFFICE",
                                    "visitType": ""
                                },
                                "runAfter": {
                                    "Authenticate_Credentials": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Compose"
                            },
                            "Condition": {
                                "actions": {
                                    "Response_2": {
                                        "inputs": {
                                            "body": "@json(concat('{\"Header\":{ \"Endpoint\" : \"AllScripts\", \"Status\" : \"Failure\", \"StatusCode\" : \"',outputs('Book_Appointment_in_AllScripts_PM')['statusCode'],'\" },\"Body\":{ \"Status\" : \"Failed\",\"ReasonDescription\" :',if(startsWith(trim(string(body('Book_Appointment_in_AllScripts_PM'))),'{'),concat('\"',json(body('Book_Appointment_in_AllScripts_PM'))['error'],'\"'),body('Book_Appointment_in_AllScripts_PM')),'}}'))",
                                            "statusCode": 200
                                        },
                                        "kind": "Http",
                                        "runAfter": {},
                                        "type": "Response"
                                    }
                                },
                                "else": {
                                    "actions": {
                                        "AllScripts_Success_Response": {
                                            "inputs": {
                                                "body": "@json(concat('{\"Header\":{ \"Endpoint\" : \"AllScripts\", \"Status\" : \"Success\", \"StatusCode\" : \"',outputs('Book_Appointment_in_AllScripts_PM')['statusCode'],'\" },\"Body\":{ \"Status\" : \"Confirmed\", \"ReasonDescription\" : \"NA\", \"AppointmentID\" : \"',body('Book_Appointment_in_AllScripts_PM')[0]['appointmentid'],'\" }}'))",
                                                "statusCode": 200
                                            },
                                            "kind": "Http",
                                            "runAfter": {},
                                            "type": "Response"
                                        }
                                    }
                                },
                                "expression": {
                                    "and": [
                                        {
                                            "contains": [
                                                "@string(body('Book_Appointment_in_AllScripts_PM'))",
                                                "Error"
                                            ]
                                        }
                                    ]
                                },
                                "runAfter": {
                                    "Book_Appointment_in_AllScripts_PM": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "If"
                            },
                            "Get_AllScripts_Access_Token": {
                                "inputs": {
                                    "body": {
                                        "Password": "P@n8r@M1cH6@Lta#nn5v@Tf!Ns2Ncp",
                                        "Username": "Panor-6855-PHITest-test"
                                    },
                                    "headers": {
                                        "Content-Type": "application/json"
                                    },
                                    "method": "POST",
                                    "uri": "@concat(body('Get_Endpoint_Details')['address'],'GetToken')"
                                },
                                "runAfter": {},
                                "type": "Http"
                            }
                        },
                        "case": "ALLSCRIPTS"
                    },
                    "Athena": {
                        "actions": {
                            "AthenaErrorResponse": {
                                "inputs": {
                                    "body": "@json(concat('{\"Header\":{ \"Endpoint\" : \"ATHENA\", \"Status\" : \"Failure\", \"StatusCode\" : \"',outputs('Book_Appointment_in_Athena')['statusCode'],'\" },\"Body\":{ \"Status\" : \"Failed\",\"ReasonDescription\" :',if(startsWith(trim(string(body('Book_Appointment_in_Athena'))),'{'),concat('\"',json(body('Book_Appointment_in_Athena'))['error'],'\"'),concat('\"',body('Book_Appointment_in_Athena'),'\"')),'}}'))",
                                    "statusCode": 200
                                },
                                "kind": "Http",
                                "runAfter": {
                                    "Book_Appointment_in_Athena": [
                                        "Failed"
                                    ]
                                },
                                "type": "Response"
                            },
                            "Athena_Book_Appointment_Response": {
                                "inputs": {
                                    "body": "@json(concat('{\"Header\":{ \"Endpoint\" : \"ATHENA\", \"Status\" : \"Success\", \"StatusCode\" : \"',outputs('Book_Appointment_in_Athena')['statusCode'],'\" },\"Body\":{ \"Status\" : \"Confirmed\", \"ReasonDescription\" : \"NA\", \"AppointmentID\" : \"',body('Book_Appointment_in_Athena')[0]['appointmentid'],'\" }}'))",
                                    "statusCode": 200
                                },
                                "kind": "Http",
                                "runAfter": {
                                    "Book_Appointment_in_Athena": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Response"
                            },
                            "Book_Appointment_in_Athena": {
                                "inputs": {
                                    "headers": {
                                        "Authorization": "Bearer @{body('Parse_Access_Token')?['access_token']}",
                                        "content-type": "application/x-www-form-urlencoded"
                                    },
                                    "method": "PUT",
                                    "retryPolicy": {
                                        "count": 1,
                                        "interval": "PT10S",
                                        "type": "fixed"
                                    },
                                    "uri": "@concat(body('Get_Endpoint_Details')['address'],'195900/appointments/',body('Parse_Identifier')?['AppointmentID'],'?appointmenttypeid=',body('Parse_Identifier')?['AppointmentTypeID'],'&ignoreschedulablepermission=true&patientid=',body('Parse_Identifier')?['PatientExternalID'])"
                                },
                                "runAfter": {
                                    "Parse_Access_Token": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Http"
                            },
                            "Get_Access_Token": {
                                "inputs": {
                                    "body": "grant_type=client_credentials&client_id=wffujq3bf5hqxbkvcqb2qta3&client_secret=f4GgJBxFF9Rcp4B",
                                    "headers": {
                                        "content-type": "application/x-www-form-urlencoded"
                                    },
                                    "method": "POST",
                                    "uri": "@concat(substring(body('Get_Endpoint_Details')['address'],0,28),'/oauthpreview/token')"
                                },
                                "runAfter": {},
                                "type": "Http"
                            },
                            "Parse_Access_Token": {
                                "inputs": {
                                    "content": "@body('Get_Access_Token')",
                                    "schema": {
                                        "properties": {
                                            "access_token": {
                                                "type": "string"
                                            },
                                            "expires_in": {
                                                "type": "integer"
                                            },
                                            "refresh_token": {
                                                "type": "string"
                                            },
                                            "token_type": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "runAfter": {
                                    "Get_Access_Token": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "ParseJson"
                            }
                        },
                        "case": "ATHENA"
                    },
                    "CERNER": {
                        "actions": {
                            "Book_Appointment_in_CERNER": {
                                "inputs": {
                                    "body": {
                                        "participant": [
                                            {
                                                "actor": {
                                                    "display": "Smart, Barney R",
                                                    "reference": "Patient/4704007"
                                                },
                                                "status": "needs-action"
                                            }
                                        ],
                                        "resourceType": "Appointment",
                                        "slot": [
                                            {
                                                "reference": "Slot/4734719-35698551-7039267-90"
                                            }
                                        ],
                                        "status": "proposed"
                                    },
                                    "headers": {
                                        "Authorization": "Bearer @{body('Get_CERNER_Access_Token')['access_token']}",
                                        "Content-Type": "application/json+fhir"
                                    },
                                    "method": "POST",
                                    "uri": "@concat(body('Get_Endpoint_Details')['address'],'Apppointment')"
                                },
                                "runAfter": {
                                    "Set_variable": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Http"
                            },
                            "Get_CERNER_Access_Token": {
                                "inputs": {
                                    "body": "grant_type=client_credentials&scope=system%2FAppointment.write%20system%2FPatient.read%20system%2FObservation.read",
                                    "headers": {
                                        "Accept": "application/json",
                                        "Authorization": "@concat('Basic ', body('Get_Endpoint_Details')['header'][1])",
                                        "Content-Type": "application/x-www-form-urlencoded"
                                    },
                                    "method": "POST",
                                    "uri": "@concat('https://authorization.sandboxcerner.com/tenants/',body('Get_Endpoint_Details')['header'][0],'/protocols/oauth2/profiles/smart-v1/token')"
                                },
                                "runAfter": {},
                                "type": "Http"
                            },
                            "Return_BookAppointment_ErrorResponse": {
                                "inputs": {
                                    "body": "@json(concat('{\"Header\":{ \"Endpoint\" : \"CERNER\", \"Status\" : \"Error\", \"StatusCode\" : \"',outputs('Book_Appointment_in_CERNER')['statusCode'],'\" },\"Body\":{ \"Error Description\" : \"',body('Book_Appointment_in_CERNER')['issue'][0]['details']['text'],'\"}'))",
                                    "statusCode": 200
                                },
                                "kind": "Http",
                                "runAfter": {
                                    "Book_Appointment_in_CERNER": [
                                        "Failed"
                                    ]
                                },
                                "type": "Response"
                            },
                            "Return_BookAppointment_Response": {
                                "inputs": {
                                    "body": "@json(concat('{\"Header\":{ \"Endpoint\" : \"CERNER\", \"Status\" : \"Success\", \"StatusCode\" : \"',outputs('Book_Appointment_in_CERNER')['statusCode'],'\" },\"Body\":{ \"Status\" : \"Confirmed\", \"ReasonDescription\" : \"NA\", \"AppointmentID\" : \"NA\" }}'))",
                                    "statusCode": 200
                                },
                                "kind": "Http",
                                "runAfter": {
                                    "Book_Appointment_in_CERNER": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Response"
                            },
                            "Set_variable": {
                                "inputs": {
                                    "name": "AccessToken",
                                    "value": "@{body('Get_CERNER_Access_Token')['access_token']}"
                                },
                                "runAfter": {
                                    "Get_CERNER_Access_Token": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "SetVariable"
                            }
                        },
                        "case": "CERNER"
                    },
                    "DrChrono": {
                        "actions": {
                            "Book_Appointment_in_DrChrono": {
                                "inputs": {
                                    "body": {
                                        "doctor": "@{body('Parse_Identifier')?['ProviderExternalID']}",
                                        "duration": 15,
                                        "exam_room": "0",
                                        "office": "@{body('Parse_Identifier')?['DepartmentID']}",
                                        "patient": "@{body('Parse_Identifier')?['PatientExternalID']}",
                                        "scheduled_time": "@{body('Parse_Identifier')?['SlotDate']}T@{body('Parse_Identifier')?['SlotTime']}"
                                    },
                                    "headers": {
                                        "Authorization": "Bearer @{body('LA.PHI.DRCHRONO.RefreshAccessToken')['AccessToken']}"
                                    },
                                    "method": "POST",
                                    "uri": "@concat(body('Get_Endpoint_Details')['address'],'appointments')"
                                },
                                "runAfter": {
                                    "LA.PHI.DRCHRONO.RefreshAccessToken": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Http"
                            },
                            "LA.PHI.DRCHRONO.RefreshAccessToken": {
                                "inputs": {
                                    "body": {
                                        "RefreshToken": "@body('Get_Endpoint_Details')['header'][1]"
                                    },
                                    "host": {
                                        "triggerName": "manual",
                                        "workflow": {
                                            "id": "/subscriptions/69aa0a7e-9493-4851-a6e8-80cca46db8cc/resourceGroups/LA.PNM.FHIR.RG/providers/Microsoft.Logic/workflows/LA.PHI.DRCHRONO.RefreshAccessToken"
                                        }
                                    }
                                },
                                "runAfter": {},
                                "type": "Workflow"
                            },
                            "Send_Appointment_ErrorResponse": {
                                "inputs": {
                                    "body": "@json(concat('{\"Header\":{ \"Endpoint\" : \"DRCHRONO\", \"Status\" : \"Error\", \"StatusCode\" : \"',outputs('Book_Appointment_in_DrChrono')['statusCode'],'\" },\"Body\":{ \"Status\" : \"Failed\", \"ReasonDescription\" : \"NA\", \"AppointmentID\" : \"\" }}'))",
                                    "headers": {
                                        "Authorization": "Bearer @{variables('AccessToken')}"
                                    },
                                    "statusCode": 200
                                },
                                "kind": "Http",
                                "runAfter": {
                                    "Book_Appointment_in_DrChrono": [
                                        "Failed"
                                    ]
                                },
                                "type": "Response"
                            },
                            "Send_Appointment_Response": {
                                "inputs": {
                                    "body": "@json(concat('{\"Header\":{ \"Endpoint\" : \"DRCHRONO\", \"Status\" : \"Success\", \"StatusCode\" : \"',outputs('Book_Appointment_in_DrChrono')['statusCode'],'\" },\"Body\":{ \"Status\" : \"Confirmed\", \"ReasonDescription\" : \"NA\", \"AppointmentID\" : \"',body('Book_Appointment_in_DrChrono')['status_transitions'][0]['appointment'],'\" }}'))",
                                    "headers": {
                                        "Authorization": "Bearer @{variables('AccessToken')}"
                                    },
                                    "statusCode": 200
                                },
                                "kind": "Http",
                                "runAfter": {
                                    "Book_Appointment_in_DrChrono": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Response"
                            }
                        },
                        "case": "DRCHRONO"
                    },
                    "EPIC": {
                        "actions": {
                            "Book_Appointment": {
                                "inputs": {
                                    "body": {
                                        "Comments": [
                                            "Scheduled via ScheduleAppointmentWithInsurance (2018B)"
                                        ],
                                        "Insurance": {
                                            "GroupNumber": "@{body('Parse_JSON')?['GroupNumber']}",
                                            "InsuranceName": "@{body('Parse_JSON')?['InsuranceName']}",
                                            "MemberNumber": "@{body('Parse_JSON')?['MemberNumber']}",
                                            "PayorID": "@{body('Parse_JSON')?['PayorID']}",
                                            "PayorIDType": "@{body('Parse_JSON')?['PayorIDType']}",
                                            "SubscriberDateOfBirth": "@{body('Parse_JSON')?['SubscriberDateOfBirth']}",
                                            "SubscriberID": "@{body('Parse_JSON')?['SubscriberID']}",
                                            "SubscriberName": "@{body('Parse_JSON')?['SubscriberName']}"
                                        }
                                    },
                                    "headers": {
                                        "Authorization": "Basic @{variables('AccessToken')}",
                                        "Content-Type": "application/json",
                                        "Epic-Client-ID": "672c5f7d-4098-46ff-a00f-57c02f330fe9"
                                    },
                                    "method": "POST",
                                    "uri": "@concat(body('Get_Endpoint_Details')['address'],'2018B/PatientAccess/External/ScheduleAppointmentWithInsurance/Scheduling2018/Open/ScheduleWithInsurance?PatientID=',body('Parse_Identifier')?['PatientExternalID'],'&PatientIDType=',body('Parse_Identifier')?['PatientIDType'],'&DepartmentID=',body('Parse_Identifier')?['DepartmentID'],'&DepartmentIDType=External&VisitTypeIDType=External&Date=',body('Parse_Identifier')?['SlotDate'],'&IsReviewOnly=false&ProviderID=',body('Parse_Identifier')?['ProviderExternalID'],'&VisitTypeID=',body('Parse_Identifier')?['VisitType'],'&ProviderIDType=External&Time=',body('Parse_Identifier')?['SlotTime'],'&IsSelfPay=true')"
                                },
                                "runAfter": {
                                    "Set_Access_Token": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Http"
                            },
                            "ErrorResponse": {
                                "inputs": {
                                    "body": "@json(concat('{\"Header\":{ \"Endpoint\" : \"EPIC\", \"Status\" : \"Failure\", \"StatusCode\" : \"',outputs('Book_Appointment')['statusCode'],'\" },\"Body\":{ \"Status\" : \"Failed\",\"ReasonDescription\" : ',if(startsWith(trim(string(body('Book_Appointment'))),'{'),body('Book_Appointment'),json(xml(body('Book_Appointment')))),'}}'))",
                                    "statusCode": 200
                                },
                                "kind": "Http",
                                "runAfter": {
                                    "Book_Appointment": [
                                        "Failed"
                                    ]
                                },
                                "type": "Response"
                            },
                            "Response": {
                                "inputs": {
                                    "body": "@json(concat('{\"Header\":{ \"Endpoint\" : \"EPIC\", \"Status\" : \"Success\", \"StatusCode\" : \"',outputs('Book_Appointment')['statusCode'],'\" },\"Body\":{ \"Status\" : \"Confirmed\", \"ReasonDescription\" : \"NA\", \"AppointmentID\" : \"\" }}'))",
                                    "statusCode": 200
                                },
                                "kind": "Http",
                                "runAfter": {
                                    "Book_Appointment": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Response"
                            },
                            "Set_Access_Token": {
                                "inputs": {
                                    "name": "AccessToken",
                                    "value": "@base64(concat('emp$',substring(body('Get_Endpoint_Details')['header'][0],9),':',substring(body('Get_Endpoint_Details')['header'][1],9)))"
                                },
                                "runAfter": {},
                                "type": "SetVariable"
                            }
                        },
                        "case": "EPIC"
                    }
                },
                "default": {
                    "actions": {}
                },
                "expression": "@variables('Endpoint')",
                "runAfter": {
                    "Parse_Identifier": [
                        "Succeeded"
                    ]
                },
                "type": "Switch"
            },
            "ValidateInput": {
                "inputs": {
                    "body": "@triggerBody()",
                    "function": {
                        "id": "/subscriptions/69aa0a7e-9493-4851-a6e8-80cca46db8cc/resourceGroups/Azure-FHIR-RG/providers/Microsoft.Web/sites/PanoramicFunctionHelper/functions/ValidateInput"
                    }
                },
                "runAfter": {},
                "type": "Function"
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "parameters": {},
        "triggers": {
            "manual": {
                "inputs": {
                    "schema": {
                        "properties": {
                            "EndpointIdentifier": {
                                "type": "string"
                            },
                            "Identifier": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "kind": "Http",
                "type": "Request"
            }
        }
    },
    "parameters": {}
}
