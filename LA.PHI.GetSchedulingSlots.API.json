{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "Compose_Fields": {
                "inputs": "@replace(concat('{ \"',replace(replace(string(triggerBody()?['Identifier']),'=','\":\"'),'|','\",\"'),'\"}'),' ','')",
                "runAfter": {},
                "type": "Compose"
            },
            "EPIC_Access_Token": {
                "inputs": {
                    "variables": [
                        {
                            "name": "EPICAccessToken",
                            "type": "string",
                            "value": "dummy"
                        }
                    ]
                },
                "runAfter": {
                    "Initialize_Endpoint": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "GetAccessToken": {
                "inputs": {
                    "body": {
                        "audience": "https://azurehealthcareapis.com",
                        "authority": "https://login.microsoftonline.com/894e47d6-5fd9-4351-b8a4-f3a178380c66",
                        "clientId": "d65826a4-a0d5-44d3-8f88-1e6660715fe9",
                        "clientSecret": "Sx1LRBabgD?GG?[5bv_RcGTboUNcRs74"
                    },
                    "function": {
                        "id": "/subscriptions/69aa0a7e-9493-4851-a6e8-80cca46db8cc/resourceGroups/Azure-FHIR-RG/providers/Microsoft.Web/sites/PanoramicFunctionHelper/functions/GetAccessToken"
                    }
                },
                "runAfter": {
                    "Parse_Identifiers": [
                        "Succeeded"
                    ]
                },
                "type": "Function"
            },
            "Get_Endpoint_Details": {
                "inputs": {
                    "headers": {
                        "Authorization": "Bearer @{body('GetAccessToken')}",
                        "content-type": "application/json"
                    },
                    "method": "GET",
                    "uri": "@concat('https://panoramic-dev.azurehealthcareapis.com/Endpoint/',triggerBody()?['EndpointIdentifier'])"
                },
                "runAfter": {
                    "GetAccessToken": [
                        "Succeeded"
                    ]
                },
                "type": "Http"
            },
            "Initialize_Endpoint": {
                "inputs": {
                    "variables": [
                        {
                            "name": "Endpoint",
                            "type": "string",
                            "value": "@if(equals(triggerBody()?['EndpointIdentifier'],''),triggerBody()?['EndpointIdentifier1'],toUpper(body('Get_Endpoint_Details')['identifier'][0]['value']))"
                        }
                    ]
                },
                "runAfter": {
                    "Get_Endpoint_Details": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Parse_Identifiers": {
                "inputs": {
                    "content": "@outputs('Compose_Fields')",
                    "schema": {
                        "properties": {
                            "AppointmentTypeID": {
                                "type": "string"
                            },
                            "DepartmentID": {
                                "type": "string"
                            },
                            "EndDate": {
                                "type": "string"
                            },
                            "ProviderID": {
                                "type": "string"
                            },
                            "StartDate": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "runAfter": {
                    "Compose_Fields": [
                        "Succeeded"
                    ]
                },
                "type": "ParseJson"
            },
            "Switch": {
                "cases": {
                    "AllScripts": {
                        "actions": {
                            "Authenticate_Credentials": {
                                "inputs": {
                                    "body": {
                                        "Action": "GetUserAuthentication",
                                        "AppUserID": "@body('Get_Endpoint_Details')['header'][0]",
                                        "Appname": "PanoramicHealthInnovationsInc.PHITest.TestApp",
                                        "Data": "",
                                        "Parameter1": "@body('Get_Endpoint_Details')['header'][1]",
                                        "Parameter2": "",
                                        "Parameter3": "",
                                        "Parameter4": "",
                                        "Parameter5": "",
                                        "Parameter6": "",
                                        "Token": "@decodeBase64(body('Get_AllScripts_Access_Token')['$content'])"
                                    },
                                    "headers": {
                                        "Content-Type": "application/json"
                                    },
                                    "method": "POST",
                                    "uri": "@concat(body('Get_Endpoint_Details')['address'],'MagicJson')"
                                },
                                "runAfter": {
                                    "Get_AllScripts_Access_Token": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Http"
                            },
                            "Get_AllScripts_Access_Token": {
                                "inputs": {
                                    "body": {
                                        "Password": "P@n8r@M1cH6@Lta#nn5v@Tf!Ns2Ncp",
                                        "Username": "Panor-6855-PHITest-test"
                                    },
                                    "headers": {
                                        "Content-Type": "application/json"
                                    },
                                    "method": "POST",
                                    "uri": "@concat(body('Get_Endpoint_Details')['address'],'GetToken')"
                                },
                                "runAfter": {},
                                "type": "Http"
                            },
                            "Get_AllScripts_Slots": {
                                "inputs": {
                                    "body": {
                                        "Action": "GetSchedule",
                                        "AppUserID": "@body('Get_Endpoint_Details')['header'][0]",
                                        "Appname": "PanoramicHealthInnovationsInc.PHITest.TestApp",
                                        "Data": "",
                                        "Parameter1": "@{body('Parse_Identifiers')?['StartDate']}|@{body('Parse_Identifiers')?['EndDate']}",
                                        "Parameter2": "",
                                        "Parameter3": "",
                                        "Parameter4": "",
                                        "Parameter5": "",
                                        "Parameter6": "",
                                        "Token": "@decodeBase64(body('Get_AllScripts_Access_Token')['$content'])"
                                    },
                                    "headers": {
                                        "Content-Type": "application/json"
                                    },
                                    "method": "POST",
                                    "uri": "@concat(body('Get_Endpoint_Details')['address'],'MagicJson')"
                                },
                                "runAfter": {
                                    "Authenticate_Credentials": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Http"
                            },
                            "Return_AllScripts_Error_Response": {
                                "inputs": {
                                    "body": "@json(concat('{\"Header\":{ \"Endpoint\" : \"AllScripts\", \"Status\" : \"Error\", \"StatusCode\" : \"',outputs('Get_AllScripts_Slots')['statusCode'],'\" },\"Body\":{ \"ReasonDescription\" : \"',body('Get_AllScripts_Slots'),'\"}}'))",
                                    "statusCode": 200
                                },
                                "kind": "Http",
                                "runAfter": {
                                    "Get_AllScripts_Slots": [
                                        "Failed"
                                    ]
                                },
                                "type": "Response"
                            },
                            "Return_AllScripts_Success_Response": {
                                "inputs": {
                                    "body": "@json(concat('{\"Header\":{ \"Endpoint\" : \"AllScripts\", \"Status\" : \"Success\", \"StatusCode\" : \"',outputs('Get_AllScripts_Slots')['statusCode'],'\" },\"Body\":{ \"Slots\" : ',body('Get_AllScripts_Slots'),'}}'))",
                                    "statusCode": 200
                                },
                                "kind": "Http",
                                "runAfter": {
                                    "Get_AllScripts_Slots": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Response"
                            }
                        },
                        "case": "ALLSCRIPTS"
                    },
                    "Athena": {
                        "actions": {
                            "Get_Athena_Access_Token": {
                                "inputs": {
                                    "body": "grant_type=client_credentials&client_id=wffujq3bf5hqxbkvcqb2qta3&client_secret=f4GgJBxFF9Rcp4B",
                                    "headers": {
                                        "content-type": "application/x-www-form-urlencoded"
                                    },
                                    "method": "POST",
                                    "uri": "@concat(substring(body('Get_Endpoint_Details')['address'],0,29),'oauthpreview/token')"
                                },
                                "runAfter": {},
                                "type": "Http"
                            },
                            "Get_Slots_from_Athena": {
                                "inputs": {
                                    "body": "appointmentdate=@{utcnow('MM/dd/yyyy')}&appointmenttime=00:00&appointmenttypeid=@{body('Parse_Identifiers')?['AppointmentTypeID']}&departmentid=@{body('Parse_Identifiers')?['DepartmentID']}&ignoreschedulablepermission=true&providerid=@{body('Parse_Identifiers')?['ProviderID']}",
                                    "headers": {
                                        "Authorization": "@concat('Bearer ',body('Get_Athena_Access_Token')['access_token'])",
                                        "Content-Type": "application/x-www-form-urlencoded"
                                    },
                                    "method": "POST",
                                    "uri": "@concat(substring(body('Get_Endpoint_Details')['address'],0,38),'195900/appointments/open')"
                                },
                                "runAfter": {
                                    "Get_Athena_Access_Token": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Http"
                            },
                            "Return_Athena_Error_Response": {
                                "inputs": {
                                    "body": "@json(concat('{\"Header\":{ \"Endpoint\" : \"ATHENA\", \"Status\" : \"Error\", \"StatusCode\" : \"',outputs('Get_Slots_from_Athena')['statusCode'],'\" },\"Body\":{ \"content\" :',body('Get_Slots_from_Athena'),'}}'))",
                                    "statusCode": "@outputs('Get_Slots_from_Athena')['statusCode']"
                                },
                                "kind": "Http",
                                "runAfter": {
                                    "Get_Slots_from_Athena": [
                                        "Failed"
                                    ]
                                },
                                "type": "Response"
                            },
                            "Return_Athena_Response": {
                                "inputs": {
                                    "body": "@json(concat('{\"Header\":{ \"Endpoint\" : \"ATHENA\", \"Status\" : \"Success\", \"StatusCode\" : \"',outputs('Get_Slots_from_Athena')['statusCode'],'\" },\"Body\":{ \"content\" :',body('Get_Slots_from_Athena'),'}}'))",
                                    "statusCode": "@outputs('Get_Slots_from_Athena')['statusCode']"
                                },
                                "kind": "Http",
                                "runAfter": {
                                    "Get_Slots_from_Athena": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Response"
                            }
                        },
                        "case": "ATHENA"
                    },
                    "CERNER": {
                        "actions": {
                            "Get_Access_Token_for_CERNER": {
                                "inputs": {
                                    "body": "grant_type=client_credentials&scope=patient%2FSchedule.read%20system%2FPatient.read%20system%2FObservation.read",
                                    "headers": {
                                        "Accept": "application/json",
                                        "Authorization": "Basic ZjNiYmJmNzgtODMxZS00ODkyLTk4NjQtMDg2ZTVhZjQyM2U3OmJhVDFNWE8tUGN2Z3B0UXJCdHFnaGFfWVJvM0VEUFNW",
                                        "Content-Type": "application/x-www-form-urlencoded"
                                    },
                                    "method": "POST",
                                    "uri": "https://authorization.sandboxcerner.com/tenants/0b8a0111-e8e6-4c26-a91c-5069cbc6b1ca/protocols/oauth2/profiles/smart-v1/token"
                                },
                                "runAfter": {},
                                "type": "Http"
                            },
                            "Get_CERNER_Slot_Details": {
                                "inputs": {
                                    "headers": {
                                        "Accept": "application/json+fhir",
                                        "Authorization": "Bearer @{body('Get_Access_Token_for_CERNER')['access_token']}"
                                    },
                                    "method": "GET",
                                    "uri": "@concat('https://fhir-open.sandboxcerner.com/dstu2/0b8a0111-e8e6-4c26-a91c-5069cbc6b1ca/Slot?start=2018&slot-type=http://snomed.info/sct|394581000&_include=Slot:schedule')"
                                },
                                "runAfter": {
                                    "Get_Access_Token_for_CERNER": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Http"
                            },
                            "ReturnErrorRersposne_Slots_from_Cerner": {
                                "inputs": {
                                    "body": "@json(concat('{\"Header\":{ \"Endpoint\" : \"CERNER\", \"Status\" : \"Error\", \"StatusCode\" : \"',outputs('Get_CERNER_Slot_Details')['statusCode'],'\" },\"Body\":{ \"Error Description\" : \"',body('Get_CERNER_Slot_Details')['issue'][0]['details']['text'],'\"}'))",
                                    "statusCode": "@outputs('Get_CERNER_Slot_Details')['statusCode']"
                                },
                                "kind": "Http",
                                "runAfter": {
                                    "Get_CERNER_Slot_Details": [
                                        "Failed"
                                    ]
                                },
                                "type": "Response"
                            },
                            "Return_Slots_from_Cerner": {
                                "inputs": {
                                    "body": "@json(concat('{\"Header\":{ \"Endpoint\" : \"CERNER\", \"Status\" : \"Success\", \"StatusCode\" : \"',outputs('Get_CERNER_Slot_Details')['statusCode'],'\" },\"Body\": ',body('Get_CERNER_Slot_Details'),'}'))",
                                    "statusCode": "@outputs('Get_CERNER_Slot_Details')['statusCode']"
                                },
                                "kind": "Http",
                                "runAfter": {
                                    "Get_CERNER_Slot_Details": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Response"
                            }
                        },
                        "case": "CERNER"
                    },
                    "DRCHRONO": {
                        "actions": {
                            "Get_Booked_Slots_for_Dr_Chrono": {
                                "inputs": {
                                    "headers": {
                                        "Authorization": "@concat('Bearer ',body('LA.PHI.DRCHRONO.RefreshAccessToken')['AccessToken'])",
                                        "Content-Type": "application/json"
                                    },
                                    "method": "GET",
                                    "uri": "https://app.drchrono.com/api/appointments?date_range=2020-06-15/2020-06-26&doctor=@{body('Parse_Identifiers')?['ProviderID']}&office=@{body('Parse_Identifiers')?['DepartmentID']}"
                                },
                                "runAfter": {
                                    "LA.PHI.DRCHRONO.RefreshAccessToken": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Http"
                            },
                            "LA.PHI.DRCHRONO.RefreshAccessToken": {
                                "inputs": {
                                    "body": {
                                        "RefreshToken": "@variables('EPICAccessToken')"
                                    },
                                    "host": {
                                        "triggerName": "manual",
                                        "workflow": {
                                            "id": "/subscriptions/69aa0a7e-9493-4851-a6e8-80cca46db8cc/resourceGroups/LA.PNM.FHIR.RG/providers/Microsoft.Logic/workflows/LA.PHI.DRCHRONO.RefreshAccessToken"
                                        }
                                    }
                                },
                                "runAfter": {
                                    "Set_DrChrono_Access_Token": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Workflow"
                            },
                            "Return_Error_Slot_Response": {
                                "inputs": {
                                    "body": "@json(concat('{\"Header\":{ \"Endpoint\" : \"DRCHRONO\", \"Status\" : \"Error\", \"StatusCode\" : \"',outputs('Get_Booked_Slots_for_Dr_Chrono')['statusCode'],'\" },\"Body\":{ \"content\" :',body('Get_Booked_Slots_for_Dr_Chrono'),'}}'))",
                                    "statusCode": "@outputs('Get_Booked_Slots_for_Dr_Chrono')['statusCode']"
                                },
                                "kind": "Http",
                                "runAfter": {
                                    "Get_Booked_Slots_for_Dr_Chrono": [
                                        "Failed"
                                    ]
                                },
                                "type": "Response"
                            },
                            "Return_Success_Slot_Response": {
                                "inputs": {
                                    "body": "@json(concat('{\"Header\":{ \"Endpoint\" : \"DRCHRONO\", \"Status\" : \"Success\", \"StatusCode\" : \"',outputs('Get_Booked_Slots_for_Dr_Chrono')['statusCode'],'\" },\"Body\":{ \"content\" :',body('Get_Booked_Slots_for_Dr_Chrono'),'}}'))",
                                    "statusCode": "@outputs('Get_Booked_Slots_for_Dr_Chrono')['statusCode']"
                                },
                                "kind": "Http",
                                "runAfter": {
                                    "Get_Booked_Slots_for_Dr_Chrono": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Response"
                            },
                            "Set_DrChrono_Access_Token": {
                                "inputs": {
                                    "name": "EPICAccessToken",
                                    "value": "Oob8DOn8JXax2d5aMp2dmXxer36gRO"
                                },
                                "runAfter": {},
                                "type": "SetVariable"
                            }
                        },
                        "case": "DRCHRONO"
                    },
                    "EPIC": {
                        "actions": {
                            "EPIC_Error_Response": {
                                "inputs": {
                                    "body": "@json(concat('{\"Header\":{ \"Endpoint\" : \"EPIC\", \"Status\" : \"Error\", \"StatusCode\" : \"',outputs('Get_Schedule_Days_For_Provider')['statusCode'],'\" },\"Body\":{ \"content\" :',body('Get_Schedule_Days_For_Provider'),'}}'))",
                                    "statusCode": "@outputs('Get_Schedule_Days_For_Provider')['statusCode']"
                                },
                                "kind": "Http",
                                "runAfter": {
                                    "Get_Schedule_Days_For_Provider": [
                                        "Failed"
                                    ]
                                },
                                "type": "Response"
                            },
                            "Get_Schedule_Days_For_Provider": {
                                "inputs": {
                                    "body": {
                                        "DepartmentIDs": [],
                                        "EndDate": "",
                                        "ProviderID": "@body('Parse_Identifiers')?['ProviderID']",
                                        "ProviderIDType": "External",
                                        "StartDate": "",
                                        "VisitTypeIDs": []
                                    },
                                    "headers": {
                                        "Authorization": "Basic @{variables('EPICAccessToken')}",
                                        "Content-Type": "application/json",
                                        "Epic-Client-ID": "672c5f7d-4098-46ff-a00f-57c02f330fe9"
                                    },
                                    "method": "POST",
                                    "uri": "@concat(substring(body('Get_Endpoint_Details')['address'],0,68),'2017/PatientAccess/External/GetScheduleDaysForProvider2/Scheduling/Open/Provider/GetScheduleDays2')"
                                },
                                "runAfter": {
                                    "Set_EPIC_Access_Token": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Http"
                            },
                            "Response": {
                                "inputs": {
                                    "body": "@json(concat('{\"Header\":{ \"Endpoint\" : \"EPIC\", \"Status\" : \"Success\", \"StatusCode\" : \"',outputs('Get_Schedule_Days_For_Provider')['statusCode'],'\" },\"Body\":{ \"content\" :',body('Get_Schedule_Days_For_Provider'),'}}'))",
                                    "statusCode": "@outputs('Get_Schedule_Days_For_Provider')['statusCode']"
                                },
                                "kind": "Http",
                                "runAfter": {
                                    "Get_Schedule_Days_For_Provider": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Response"
                            },
                            "Set_EPIC_Access_Token": {
                                "inputs": {
                                    "name": "EPICAccessToken",
                                    "value": "@base64(concat('emp$',substring(body('Get_Endpoint_Details')['header'][0],9),':',substring(body('Get_Endpoint_Details')['header'][1],9)))"
                                },
                                "runAfter": {},
                                "type": "SetVariable"
                            }
                        },
                        "case": "EPIC"
                    },
                    "NextGen": {
                        "actions": {
                            "Error_Response_from_NextGen": {
                                "inputs": {
                                    "body": "@json(concat('{\"Header\":{ \"Endpoint\" : \"NEXTGEN\", \"Status\" : \"Error\", \"StatusCode\" : \"',outputs('Get_NextGen_Appointment_Slots')['statusCode'],'\" },\"Body\":{ \"content\" :',body('Get_NextGen_Appointment_Slots'),'}}'))",
                                    "statusCode": 200
                                },
                                "kind": "Http",
                                "runAfter": {
                                    "Get_NextGen_Appointment_Slots": [
                                        "Failed"
                                    ]
                                },
                                "type": "Response"
                            },
                            "Get_NextGen_Access_Token": {
                                "inputs": {
                                    "body": "grant_type=password&client_id=l79800f2eab85041a4a1cdc364641df514&client_secret=b67bd784a7264dd6aa1ba1f6bfe3b8c1&email=sandbox_593%40yopmail.com&username=sandboxprod593&password=E55C9c25-23D1-45A6-959F%21",
                                    "headers": {
                                        "Content-Type": "application/x-www-form-urlencoded"
                                    },
                                    "method": "POST",
                                    "uri": "https://nativeapi.nextgen.com/auth/oauth/v2/token"
                                },
                                "runAfter": {},
                                "type": "Http"
                            },
                            "Get_NextGen_Appointment_Slots": {
                                "inputs": {
                                    "headers": {
                                        "Authorization": "Bearer @{body('Get_NextGen_Access_Token')['access_token']}"
                                    },
                                    "method": "GET",
                                    "uri": "https://nativeapi.nextgen.com/nga-native-api/appointments/slots"
                                },
                                "runAfter": {
                                    "Get_NextGen_Access_Token": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Http"
                            },
                            "Success_Response_from_NextGen": {
                                "inputs": {
                                    "body": "@json(concat('{\"Header\":{ \"Endpoint\" : \"NEXTGEN\", \"Status\" : \"Success\", \"StatusCode\" : \"',outputs('Get_NextGen_Appointment_Slots')['statusCode'],'\" },\"Body\":{ \"content\" :',body('Get_NextGen_Appointment_Slots'),'}}'))",
                                    "statusCode": 200
                                },
                                "kind": "Http",
                                "runAfter": {
                                    "Get_NextGen_Appointment_Slots": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Response"
                            }
                        },
                        "case": "NEXTGEN"
                    }
                },
                "default": {
                    "actions": {}
                },
                "expression": "@variables('Endpoint')",
                "runAfter": {
                    "EPIC_Access_Token": [
                        "Succeeded"
                    ]
                },
                "type": "Switch"
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "parameters": {},
        "triggers": {
            "manual": {
                "inputs": {
                    "schema": {
                        "properties": {
                            "EndpointIdentifier": {
                                "type": "string"
                            },
                            "Identifier": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "kind": "Http",
                "type": "Request"
            }
        }
    },
    "parameters": {}
}
